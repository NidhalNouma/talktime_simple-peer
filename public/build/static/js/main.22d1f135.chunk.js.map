{"version":3,"sources":["component/WaveAudio.js","hooks/index.js","component/Audio.js","hooks/Call.js","App.js","reportWebVitals.js","index.js"],"names":["WaveAudio","stream","lstream","useState","Wave","wave","lwave","rel","setRel","audio","useRef","useEffect","interval","setTimeout","r","clearTimeout","active","fromStream","type","colors","console","log","current","srcObject","stopStream","id","ref","style","display","volume","autoPlay","Main","close","setStream","rstream","setRStream","startCall","setStartCall","socket","setSocket","peer","url","window","location","host","Socket","send","JSON","stringify","destroy","next","event","preventDefault","connected","on","err","error","stack","message","once","fn","navigator","mediaDevices","getUserMedia","then","s","catch","alert","getMediaUser","parse","data","signal","Peer","initiator","handlePeer","Audio","answer","stopAudioOnly","color","height","width","getTracks","forEach","track","stop","Call","state","setState","btnText","setBtnText","click","App","className","onClick","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d1f135.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport Wave from \"wave-visualizer\";\n\nfunction WaveAudio({ stream, lstream }) {\n  const [wave] = useState(new Wave());\n  const [lwave] = useState(new Wave());\n  const [rel, setRel] = useState(0);\n\n  const audio = useRef(null);\n\n  useEffect(() => {\n    const interval = setTimeout(() => {\n      setRel((r) => r + 1);\n      // console.log(rel);\n    }, 1000);\n    return () => clearTimeout(interval);\n  }, [rel]);\n\n  useEffect(() => {\n    stream &&\n      stream.active &&\n      wave.fromStream(stream, \"wave\", {\n        type: \"shine\",\n        colors: [\"rgba(149, 54, 64,1)\", \"white\", \"blue\"],\n      });\n\n    lstream &&\n      lstream.active &&\n      lwave.fromStream(lstream, \"lwave\", {\n        type: \"shine\",\n        colors: [\"rgba(45, 134, 233, 1)\", \"white\", \"blue\"],\n      });\n\n    console.log(\"Start streaming audio ...,\", stream);\n\n    audio.current.srcObject = stream;\n    return () => {\n      wave.stopStream();\n      lwave.stopStream();\n    };\n  }, []);\n\n  return (\n    <div>\n      <canvas id=\"wave\"></canvas>\n      <br />\n      <canvas id=\"lwave\"></canvas>\n      <audio\n        ref={audio}\n        style={{ display: \"none\" }}\n        volume=\"true\"\n        autoPlay\n      ></audio>\n    </div>\n  );\n}\n\nexport default WaveAudio;\n","import Peer from \"simple-peer\";\nimport Socket from \"simple-websocket\";\n\nimport { useState, useEffect, useRef } from \"react\";\n\nfunction Main(type, close) {\n  const [lstream, setStream] = useState();\n  const [rstream, setRStream] = useState();\n  const [startCall, setStartCall] = useState(false);\n\n  const [socket, setSocket] = useState(null);\n\n  const peer = useRef(null);\n\n  useEffect(() => {\n    if (type === 1) {\n      let url = window.location.host;\n      if (!process.env.NODE_ENV || process.env.NODE_ENV === \"development\")\n        url = \"localhost:8080\";\n\n      setSocket(new Socket({ url: \"ws://\" + url }));\n\n      console.log(\"start ...\");\n    } else if (type === 0) {\n      setStartCall(false);\n      if (socket) {\n        socket.send(JSON.stringify({ type: \"end\" }));\n        socket.destroy();\n        setSocket(null);\n        if (peer && peer.current) {\n          peer.current.destroy();\n          peer.current = null;\n        }\n        console.log(\"ERROR send end\");\n      }\n    }\n  }, [type]);\n\n  useEffect(() => {\n    if (socket) {\n      let stream = null;\n\n      socket.on(\"error\", function (err) {\n        console.error(\"[socket error]\", err.stack || err.message || err);\n      });\n\n      socket.once(\"connect\", function () {\n        getMediaUser(next, (s) => (stream = s));\n      });\n\n      socket.on(\"data\", function (message) {\n        console.log(\"got socket message: \" + message);\n        try {\n          message = JSON.parse(message);\n        } catch (err) {\n          console.error(\"[socket error]\", err.stack || err.message || err);\n        }\n\n        if (message.type === \"signal\") {\n          handleSignal(message.data);\n        } else if (message.type === \"count\") {\n          console.log(message.data);\n        } else if (message.type === \"end\") {\n          next();\n        } else if (message.type === \"peer\") {\n          handlePeer(message.data);\n        }\n      });\n\n      function next(event) {\n        if (event && event.preventDefault) {\n          event.preventDefault();\n        }\n        if (peer && peer.current) {\n          console.log(\"ok\");\n          if (socket && socket.connected)\n            socket.send(JSON.stringify({ type: \"end\" }));\n          peer.current.destroy();\n          close();\n        }\n        if (socket && socket.connected)\n          socket.send(JSON.stringify({ type: \"peer\" }));\n        //\n      }\n\n      function handlePeer(data) {\n        data = data || {};\n\n        peer.current = new Peer({\n          initiator: !!data.initiator,\n          stream: stream,\n        });\n\n        peer.current.on(\"error\", function (err) {\n          console.error(\"peer error\", err.stack || err.message || err);\n        });\n\n        peer.current.on(\"connect\", function () {\n          setStartCall(true);\n        });\n\n        peer.current.on(\"signal\", function (data) {\n          socket.send(JSON.stringify({ type: \"signal\", data: data }));\n        });\n\n        peer.current.on(\"stream\", function (stream) {\n          setRStream(stream);\n        });\n\n        peer.current.on(\"data\", function (message) {\n          // addChat(message, \"remote\");\n        });\n\n        // Takes ~3 seconds before this event fires when peerconnection is dead (timeout)\n        peer.current.on(\"close\", next);\n      }\n\n      function handleSignal(data) {\n        if (peer && peer.current) peer.current.signal(data);\n      }\n    }\n  }, [socket]);\n\n  function getMediaUser(next, fn) {\n    navigator.mediaDevices\n      .getUserMedia({\n        audio: true,\n      })\n      .then(function (s) {\n        fn(s);\n        setStream(s);\n        console.log(\"stream ,\", s);\n        next();\n      })\n      .catch(function (err) {\n        console.error(err);\n        window.alert(\"You must share your micrephone to use this app!\");\n      });\n  }\n\n  return { lstream, rstream, startCall };\n}\n\nexport default Main;\n","import React, { useEffect, useState } from \"react\";\nimport Loader from \"react-loader-spinner\";\nimport WaveAudio from \"./WaveAudio\";\n\nimport Main from \"../hooks\";\n\nfunction Audio({ type = 0, answer, close }) {\n  const { lstream, rstream, startCall } = Main(type, close);\n\n  useEffect(() => {\n    if (type === 0) {\n      stopAudioOnly(lstream);\n      stopAudioOnly(rstream);\n    }\n  }, [type]);\n\n  useEffect(() => {\n    if (startCall) {\n      answer();\n    }\n  }, [startCall]);\n\n  return type === 1 ? (\n    <Loader type=\"Bars\" color=\"rgba(102, 193, 113, 1)\" height={80} width={80} />\n  ) : type === 2 && rstream ? (\n    <WaveAudio stream={rstream} lstream={lstream} />\n  ) : (\n    <div></div>\n  );\n}\n\nexport default Audio;\n\nfunction stopAudioOnly(stream) {\n  if (stream) {\n    stream.getTracks().forEach(function (track) {\n      track.stop();\n      console.log(\"st\", stream);\n    });\n  }\n}\n","import { useState } from \"react\";\n\nfunction Call() {\n  const [state, setState] = useState(0);\n  const [btnText, setBtnText] = useState(\"Call\");\n\n  const click = function () {\n    state === 0 && (setState(1) || setBtnText(\"Dialling\"));\n    state === 1 && (setState(0) || setBtnText(\"Call\"));\n    // state === 1 && (setState(2) || setBtnText(\"End\"));\n    state === 2 && (setState(0) || setBtnText(\"Call\"));\n  };\n\n  const answer = function () {\n    console.log(\"answer call ...\");\n    setState(2);\n    setBtnText(\"End\");\n  };\n\n  const close = function () {\n    console.log(\"call closed ...\");\n    setState(0);\n    setBtnText(\"Call\");\n  };\n\n  return { state, click, btnText, answer, close };\n}\n\nexport default Call;\n","import React from \"react\";\nimport Audio from \"./component/Audio\";\nimport Call from \"./hooks/Call\";\n\nfunction App() {\n  const { state, click, btnText, answer, close } = Call();\n\n  return (\n    <div className=\"App\">\n      <div className=\"logo\">\n        <h4>TalkTime</h4>\n      </div>\n      <div>\n        <h5>Find someone to talk to.</h5>\n      </div>\n      <div className=\"audio-animation\">\n        <Audio type={state} answer={answer} close={close} />\n      </div>\n      <div className=\"button\">\n        <button onClick={click} className={btnText}>\n          {btnText}\n        </button>\n      </div>\n      <div className=\"footer\">\n        <a href=\"/privacy\">Privacy Policy</a> | <a href=\"/terms\">Terms</a>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}